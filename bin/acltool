#!/usr/bin/env node

/*
 * Copyright 2016 Telefonica Investigaci√≥n y Desarrollo, S.A.U
 *
 * This file is part of iotagent-ul
 *
 * iotagent-ul is free software: you can redistribute it and/or
 * modify it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the License,
 * or (at your option) any later version.
 *
 * iotagent-ul is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public
 * License along with iotagent-ul.
 * If not, seehttp://www.gnu.org/licenses/.
 *
 * For those usages not covered by the GNU Affero General Public License
 * please contact with::[iot_support@tid.es]
 */
'use strict';

var async = require('async'),
    fs = require('fs'),
    program = require('commander'),
    apply = async.apply,
    amqp = require('amqplib/callback_api');

function sendCommand(key, msg) {
    amqp.connect('amqp://localhost', function(err, conn) {
      conn.createChannel(function(err, ch) {
        var ex = '_topicacladmin';
        var args = process.argv.slice(2);

        ch.assertExchange(ex, 'topic', {});
        ch.publish(ex, key, new Buffer(msg));
      });

      setTimeout(function() { conn.close(); process.exit(0) }, 500);
    });
}

function addPermission(user, topic, permission) {
    var payload = user + ' ' + topic + ' ' + permission + ';';
    sendCommand('add', payload);
}

function refreshPermissions() {
    sendCommand('refresh', '');
}

function savePermissions() {
    sendCommand('save', '');
}

try {
    program
        .version('0.0.1');

    program
        .command('add <topic> <permission> [user]')
        .description('Adds a new permission for the selected user or a global permission if no user is given.')
        .action(function (topic, permission, user, command) {
            console.log('Adding new permission [%s %s %s]', topic, permission, user);
            addPermission(user || '', topic, permission);
        });

    program
        .command('refresh')
        .description('Send a message to the RabbitMQ ACL service to refresh the ACL file for all the listeners.')
        .action(function (command) {
            console.log('Refreshing permissions');
            refreshPermissions();
        });

    program
        .command('save')
        .description('Saves the ACL Database to the configured file.')
        .action(function (command) {
            console.log('Saving permissions list');
            savePermissions();
        });


    program.parse(process.argv);

} catch(error) {
    console.error('Error: %s', error);
}
